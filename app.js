/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({

});


Ext.application({

    requires: [
        'Ext.MessageBox'
    ],
    appVersion: 'Alpha_0.11',
    models: [
        'user.Session'
    ],
    stores: [
        'user.Session'
    ],
    views: [
        'main.Menu',
        'mainViewport',
        'Holder',
        'intro.Main',
        'user.VerifyAccount',
        'user.Register',
        'user.Login'
    ],
    controllers: [
        'user.Login',
        'nativeFunctions.cordova',
        'nativeFunctions.cameraPlugin',
        'nativeFunctions.devicePlugin',
        'server.checkPlayerData',
        'user.Register',
        'client.settings',
        'nativeFunctions.Sqlite',
        'client.database',
        'main.Menu',
        'server.versionControl',
        'server.sendData',
        'user.Verify'
    ],
    name: 'Instinct',

    requires: [
        'Ext.MessageBox'
    ],

    launch: function() {
        Ext.Msg.defaultAllowedConfig.showAnimation = false;
        Ext.create('Instinct.view.Holder', {fullscreen: true});

        var viewport 		= Ext.getCmp('mainViewport');
        var newActiveItem	= "";
        var introItem 		= Ext.widget('introMain');

        if(typeof navigator !== 'undefined' && typeof navigator.splashscreen !== 'undefined'){
            setTimeout(function(){
                navigator.splashscreen.hide();
            },2000);
        }

        var loadSettings = function(callbackFn){
            Instinct.app.getController('client.settings').loadSettings(callbackFn);
        };
        var createTables = function(callbackFn){
            Instinct.app.getController('client.database').createTables(callbackFn);
        };


        var openIntro	= function(callbackFn){
            if(typeof navigator !== 'undefined' && typeof navigator.splashscreen !== 'undefined'){
                setTimeout(function(){
                    viewport.add(introItem);
                    callbackFn();
                    navigator.splashscreen.hide();
                },250);
            }else{
                viewport.add(introItem);
                callbackFn();
            }
        };
        var openApp 	= function(){
            var serverFunc 	= Instinct.app.getController("server.checkPlayerData");
            var serverVer	= Instinct.app.getController("server.versionControl");
            serverVer.checkServerVersion(function(serverVersion){
                if(serverVersion !== Instinct.app.appVersion && serverVersion !== "Error"){
                    Ext.Msg.alert(false,"New version ["+serverVersion+"] is out, please update the app.");
                }else{
                    var userId		= settings.get('userId');
                    var userToken	= settings.get('userToken');
                    if(userId === false || userToken === false){
                        setTimeout(function(){
                            newActiveItem 	= Ext.widget('instinctMain');
                            viewport.remove(introItem);
                            viewport.add(newActiveItem);
                        }, 2000);
                    }else{
                        serverFunc.checkToken(function(result){
                            if(result === true){
                                setTimeout(function(){
                                    newActiveItem 	= Ext.widget('mainMenu');
                                    viewport.add(newActiveItem);
                                    viewport.remove(introItem);
                                }, 2000);
                            }else{
                                setTimeout(function(){
                                    newActiveItem 	= Ext.widget('instinctMain');
                                    viewport.remove(introItem);
                                    viewport.add(newActiveItem);
                                }, 2000);
                            }
                        });
                    }
                }
            });
        };

        Instinct.app.getController('nativeFunctions.Sqlite').openDatabase(function(){
            createTables(function(){
                loadSettings(function(){
                    openIntro(function(){
                        openApp();
                    });
                });
            });
        });
    }

});
