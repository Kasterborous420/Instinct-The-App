/*
 * File: app/controller/nativeFunctions/cameraPlugin.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Instinct.controller.nativeFunctions.cameraPlugin', {
    extend: 'Ext.app.Controller',

    config: {
    },

    checkPlugin: function() {
        if(typeof navigator !== 'undefined' && typeof navigator.camera !== 'undefined'){
            return true;
        }else{
            console.log('Cordova plugin not found, please make sure you are running this in an emulator');
            Ext.Msg.alert(false, "No camera functionality / photo library found. You will not be able to use the camera / photo library in this app!");
            return false;
        }
    },

    loadPhoto: function(callbackFn) {
        navigator.camera.getPicture(
            function(photo){
                callbackFn(photo, 'true');
            },
            function(error){
                //Ext.Msg.alert(false,error);
                Ext.Viewport.unmask();
                console.log('error : '+ error);
                callbackFn(error, 'false');
            },
            {
                quality: 49,
                destinationType: navigator.camera.DestinationType.DATA_URL,
                //destinationType: navigator.camera.DestinationType.FILE_URI,
                sourceType: navigator.camera.PictureSourceType.PHOTOLIBRARY,
                targetWidth:1500,
                targetHeight:1500,
                correctOrientation: true,
                //allowEdit : true,
                encodingType: Camera.EncodingType.JPEG
            }
        );
    },

    takePhoto: function(callbackFn) {
        navigator.camera.getPicture(
            function(photo){
                callbackFn(photo, 'true');
            },
            function(error){
                //Ext.Msg.alert(false,error);
                Ext.Viewport.unmask();
                console.log('error : '+ error);
                callbackFn(error, 'false');
            },
            {
                quality: 49,
                destinationType: navigator.camera.DestinationType.DATA_URL,
                //destinationType: navigator.camera.DestinationType.FILE_URI,
                sourceType: navigator.camera.PictureSourceType.CAMERA,
                targetWidth:1500,
                targetHeight:1500,
                correctOrientation: true,
                //allowEdit : true,
                encodingType: Camera.EncodingType.JPEG
            }
        );
    }

});